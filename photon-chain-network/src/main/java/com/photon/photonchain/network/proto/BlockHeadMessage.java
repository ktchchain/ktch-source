// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BlockHeadMessage.proto

package com.photon.photonchain.network.proto;

public final class BlockHeadMessage {
  private BlockHeadMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BlockHeadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:BlockHead)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 version = 1;</code>
     */
    boolean hasVersion();
    /**
     * <code>required int32 version = 1;</code>
     */
    int getVersion();

    /**
     * <code>required int64 timeStamp = 2;</code>
     */
    boolean hasTimeStamp();
    /**
     * <code>required int64 timeStamp = 2;</code>
     */
    long getTimeStamp();

    /**
     * <code>required sfixed64 cumulativeDifficulty = 3;</code>
     */
    boolean hasCumulativeDifficulty();
    /**
     * <code>required sfixed64 cumulativeDifficulty = 3;</code>
     */
    long getCumulativeDifficulty();

    /**
     * <code>required bytes hashPrevBlock = 4;</code>
     */
    boolean hasHashPrevBlock();
    /**
     * <code>required bytes hashPrevBlock = 4;</code>
     */
    com.google.protobuf.ByteString getHashPrevBlock();

    /**
     * <code>required bytes hashMerkleRoot = 5;</code>
     */
    boolean hasHashMerkleRoot();
    /**
     * <code>required bytes hashMerkleRoot = 5;</code>
     */
    com.google.protobuf.ByteString getHashMerkleRoot();
  }
  /**
   * Protobuf type {@code BlockHead}
   */
  public  static final class BlockHead extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:BlockHead)
      BlockHeadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BlockHead.newBuilder() to construct.
    private BlockHead(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BlockHead() {
      version_ = 0;
      timeStamp_ = 0L;
      cumulativeDifficulty_ = 0L;
      hashPrevBlock_ = com.google.protobuf.ByteString.EMPTY;
      hashMerkleRoot_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BlockHead(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              version_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timeStamp_ = input.readInt64();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              cumulativeDifficulty_ = input.readSFixed64();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              hashPrevBlock_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              hashMerkleRoot_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.photon.photonchain.network.proto.BlockHeadMessage.internal_static_BlockHead_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.photon.photonchain.network.proto.BlockHeadMessage.internal_static_BlockHead_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead.class, com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead.Builder.class);
    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <code>required int32 version = 1;</code>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 version = 1;</code>
     */
    public int getVersion() {
      return version_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private long timeStamp_;
    /**
     * <code>required int64 timeStamp = 2;</code>
     */
    public boolean hasTimeStamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 timeStamp = 2;</code>
     */
    public long getTimeStamp() {
      return timeStamp_;
    }

    public static final int CUMULATIVEDIFFICULTY_FIELD_NUMBER = 3;
    private long cumulativeDifficulty_;
    /**
     * <code>required sfixed64 cumulativeDifficulty = 3;</code>
     */
    public boolean hasCumulativeDifficulty() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required sfixed64 cumulativeDifficulty = 3;</code>
     */
    public long getCumulativeDifficulty() {
      return cumulativeDifficulty_;
    }

    public static final int HASHPREVBLOCK_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString hashPrevBlock_;
    /**
     * <code>required bytes hashPrevBlock = 4;</code>
     */
    public boolean hasHashPrevBlock() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bytes hashPrevBlock = 4;</code>
     */
    public com.google.protobuf.ByteString getHashPrevBlock() {
      return hashPrevBlock_;
    }

    public static final int HASHMERKLEROOT_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString hashMerkleRoot_;
    /**
     * <code>required bytes hashMerkleRoot = 5;</code>
     */
    public boolean hasHashMerkleRoot() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required bytes hashMerkleRoot = 5;</code>
     */
    public com.google.protobuf.ByteString getHashMerkleRoot() {
      return hashMerkleRoot_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeStamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCumulativeDifficulty()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHashPrevBlock()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHashMerkleRoot()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, timeStamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSFixed64(3, cumulativeDifficulty_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, hashPrevBlock_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, hashMerkleRoot_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, timeStamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(3, cumulativeDifficulty_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, hashPrevBlock_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, hashMerkleRoot_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead)) {
        return super.equals(obj);
      }
      com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead other = (com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead) obj;

      boolean result = true;
      result = result && (hasVersion() == other.hasVersion());
      if (hasVersion()) {
        result = result && (getVersion()
            == other.getVersion());
      }
      result = result && (hasTimeStamp() == other.hasTimeStamp());
      if (hasTimeStamp()) {
        result = result && (getTimeStamp()
            == other.getTimeStamp());
      }
      result = result && (hasCumulativeDifficulty() == other.hasCumulativeDifficulty());
      if (hasCumulativeDifficulty()) {
        result = result && (getCumulativeDifficulty()
            == other.getCumulativeDifficulty());
      }
      result = result && (hasHashPrevBlock() == other.hasHashPrevBlock());
      if (hasHashPrevBlock()) {
        result = result && getHashPrevBlock()
            .equals(other.getHashPrevBlock());
      }
      result = result && (hasHashMerkleRoot() == other.hasHashMerkleRoot());
      if (hasHashMerkleRoot()) {
        result = result && getHashMerkleRoot()
            .equals(other.getHashMerkleRoot());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasVersion()) {
        hash = (37 * hash) + VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getVersion();
      }
      if (hasTimeStamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTimeStamp());
      }
      if (hasCumulativeDifficulty()) {
        hash = (37 * hash) + CUMULATIVEDIFFICULTY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCumulativeDifficulty());
      }
      if (hasHashPrevBlock()) {
        hash = (37 * hash) + HASHPREVBLOCK_FIELD_NUMBER;
        hash = (53 * hash) + getHashPrevBlock().hashCode();
      }
      if (hasHashMerkleRoot()) {
        hash = (37 * hash) + HASHMERKLEROOT_FIELD_NUMBER;
        hash = (53 * hash) + getHashMerkleRoot().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code BlockHead}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:BlockHead)
        com.photon.photonchain.network.proto.BlockHeadMessage.BlockHeadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.photon.photonchain.network.proto.BlockHeadMessage.internal_static_BlockHead_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.photon.photonchain.network.proto.BlockHeadMessage.internal_static_BlockHead_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead.class, com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead.Builder.class);
      }

      // Construct using com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        timeStamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        cumulativeDifficulty_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        hashPrevBlock_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        hashMerkleRoot_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.photon.photonchain.network.proto.BlockHeadMessage.internal_static_BlockHead_descriptor;
      }

      public com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead getDefaultInstanceForType() {
        return com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead.getDefaultInstance();
      }

      public com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead build() {
        com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead buildPartial() {
        com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead result = new com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timeStamp_ = timeStamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cumulativeDifficulty_ = cumulativeDifficulty_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.hashPrevBlock_ = hashPrevBlock_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.hashMerkleRoot_ = hashMerkleRoot_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead) {
          return mergeFrom((com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead other) {
        if (other == com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasTimeStamp()) {
          setTimeStamp(other.getTimeStamp());
        }
        if (other.hasCumulativeDifficulty()) {
          setCumulativeDifficulty(other.getCumulativeDifficulty());
        }
        if (other.hasHashPrevBlock()) {
          setHashPrevBlock(other.getHashPrevBlock());
        }
        if (other.hasHashMerkleRoot()) {
          setHashMerkleRoot(other.getHashMerkleRoot());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVersion()) {
          return false;
        }
        if (!hasTimeStamp()) {
          return false;
        }
        if (!hasCumulativeDifficulty()) {
          return false;
        }
        if (!hasHashPrevBlock()) {
          return false;
        }
        if (!hasHashMerkleRoot()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int version_ ;
      /**
       * <code>required int32 version = 1;</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 version = 1;</code>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>required int32 version = 1;</code>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 version = 1;</code>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0;
        onChanged();
        return this;
      }

      private long timeStamp_ ;
      /**
       * <code>required int64 timeStamp = 2;</code>
       */
      public boolean hasTimeStamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 timeStamp = 2;</code>
       */
      public long getTimeStamp() {
        return timeStamp_;
      }
      /**
       * <code>required int64 timeStamp = 2;</code>
       */
      public Builder setTimeStamp(long value) {
        bitField0_ |= 0x00000002;
        timeStamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 timeStamp = 2;</code>
       */
      public Builder clearTimeStamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timeStamp_ = 0L;
        onChanged();
        return this;
      }

      private long cumulativeDifficulty_ ;
      /**
       * <code>required sfixed64 cumulativeDifficulty = 3;</code>
       */
      public boolean hasCumulativeDifficulty() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required sfixed64 cumulativeDifficulty = 3;</code>
       */
      public long getCumulativeDifficulty() {
        return cumulativeDifficulty_;
      }
      /**
       * <code>required sfixed64 cumulativeDifficulty = 3;</code>
       */
      public Builder setCumulativeDifficulty(long value) {
        bitField0_ |= 0x00000004;
        cumulativeDifficulty_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sfixed64 cumulativeDifficulty = 3;</code>
       */
      public Builder clearCumulativeDifficulty() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cumulativeDifficulty_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString hashPrevBlock_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes hashPrevBlock = 4;</code>
       */
      public boolean hasHashPrevBlock() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bytes hashPrevBlock = 4;</code>
       */
      public com.google.protobuf.ByteString getHashPrevBlock() {
        return hashPrevBlock_;
      }
      /**
       * <code>required bytes hashPrevBlock = 4;</code>
       */
      public Builder setHashPrevBlock(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        hashPrevBlock_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes hashPrevBlock = 4;</code>
       */
      public Builder clearHashPrevBlock() {
        bitField0_ = (bitField0_ & ~0x00000008);
        hashPrevBlock_ = getDefaultInstance().getHashPrevBlock();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString hashMerkleRoot_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes hashMerkleRoot = 5;</code>
       */
      public boolean hasHashMerkleRoot() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required bytes hashMerkleRoot = 5;</code>
       */
      public com.google.protobuf.ByteString getHashMerkleRoot() {
        return hashMerkleRoot_;
      }
      /**
       * <code>required bytes hashMerkleRoot = 5;</code>
       */
      public Builder setHashMerkleRoot(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        hashMerkleRoot_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes hashMerkleRoot = 5;</code>
       */
      public Builder clearHashMerkleRoot() {
        bitField0_ = (bitField0_ & ~0x00000010);
        hashMerkleRoot_ = getDefaultInstance().getHashMerkleRoot();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:BlockHead)
    }

    // @@protoc_insertion_point(class_scope:BlockHead)
    private static final com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead();
    }

    public static com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<BlockHead>
        PARSER = new com.google.protobuf.AbstractParser<BlockHead>() {
      public BlockHead parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlockHead(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BlockHead> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BlockHead> getParserForType() {
      return PARSER;
    }

    public com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_BlockHead_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_BlockHead_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026BlockHeadMessage.proto\"|\n\tBlockHead\022\017\n" +
      "\007version\030\001 \002(\005\022\021\n\ttimeStamp\030\002 \002(\003\022\034\n\024cum" +
      "ulativeDifficulty\030\003 \002(\020\022\025\n\rhashPrevBlock" +
      "\030\004 \002(\014\022\026\n\016hashMerkleRoot\030\005 \002(\014B8\n$com.ph" +
      "oton.photonchain.network.protoB\020BlockHea" +
      "dMessage"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_BlockHead_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_BlockHead_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_BlockHead_descriptor,
        new java.lang.String[] { "Version", "TimeStamp", "CumulativeDifficulty", "HashPrevBlock", "HashMerkleRoot", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
