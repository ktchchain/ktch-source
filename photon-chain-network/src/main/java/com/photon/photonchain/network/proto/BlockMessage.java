// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BlockMessage.proto

package com.photon.photonchain.network.proto;

public final class BlockMessage {
  private BlockMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Block)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 blockHeight = 1;</code>
     */
    boolean hasBlockHeight();
    /**
     * <code>required int64 blockHeight = 1;</code>
     */
    long getBlockHeight();

    /**
     * <code>required int64 blockSize = 2;</code>
     */
    boolean hasBlockSize();
    /**
     * <code>required int64 blockSize = 2;</code>
     */
    long getBlockSize();

    /**
     * <code>required int64 totalAmount = 3;</code>
     */
    boolean hasTotalAmount();
    /**
     * <code>required int64 totalAmount = 3;</code>
     */
    long getTotalAmount();

    /**
     * <code>required int64 totalFee = 4;</code>
     */
    boolean hasTotalFee();
    /**
     * <code>required int64 totalFee = 4;</code>
     */
    long getTotalFee();

    /**
     * <code>required bytes blockSignature = 5;</code>
     */
    boolean hasBlockSignature();
    /**
     * <code>required bytes blockSignature = 5;</code>
     */
    com.google.protobuf.ByteString getBlockSignature();

    /**
     * <code>required bytes foundryPublicKey = 6;</code>
     */
    boolean hasFoundryPublicKey();
    /**
     * <code>required bytes foundryPublicKey = 6;</code>
     */
    com.google.protobuf.ByteString getFoundryPublicKey();

    /**
     * <code>required .BlockHead blockHead = 7;</code>
     */
    boolean hasBlockHead();
    /**
     * <code>required .BlockHead blockHead = 7;</code>
     */
    com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead getBlockHead();
    /**
     * <code>required .BlockHead blockHead = 7;</code>
     */
    com.photon.photonchain.network.proto.BlockHeadMessage.BlockHeadOrBuilder getBlockHeadOrBuilder();

    /**
     * <code>repeated .Transaction blockTransactions = 8;</code>
     */
    java.util.List<com.photon.photonchain.network.proto.TransactionMessage.Transaction> 
        getBlockTransactionsList();
    /**
     * <code>repeated .Transaction blockTransactions = 8;</code>
     */
    com.photon.photonchain.network.proto.TransactionMessage.Transaction getBlockTransactions(int index);
    /**
     * <code>repeated .Transaction blockTransactions = 8;</code>
     */
    int getBlockTransactionsCount();
    /**
     * <code>repeated .Transaction blockTransactions = 8;</code>
     */
    java.util.List<? extends com.photon.photonchain.network.proto.TransactionMessage.TransactionOrBuilder> 
        getBlockTransactionsOrBuilderList();
    /**
     * <code>repeated .Transaction blockTransactions = 8;</code>
     */
    com.photon.photonchain.network.proto.TransactionMessage.TransactionOrBuilder getBlockTransactionsOrBuilder(
        int index);

    /**
     * <code>required string blockHash = 9;</code>
     */
    boolean hasBlockHash();
    /**
     * <code>required string blockHash = 9;</code>
     */
    java.lang.String getBlockHash();
    /**
     * <code>required string blockHash = 9;</code>
     */
    com.google.protobuf.ByteString
        getBlockHashBytes();
  }
  /**
   * Protobuf type {@code Block}
   */
  public  static final class Block extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Block)
      BlockOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Block.newBuilder() to construct.
    private Block(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Block() {
      blockHeight_ = 0L;
      blockSize_ = 0L;
      totalAmount_ = 0L;
      totalFee_ = 0L;
      blockSignature_ = com.google.protobuf.ByteString.EMPTY;
      foundryPublicKey_ = com.google.protobuf.ByteString.EMPTY;
      blockTransactions_ = java.util.Collections.emptyList();
      blockHash_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Block(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              blockHeight_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              blockSize_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              totalAmount_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              totalFee_ = input.readInt64();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              blockSignature_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              foundryPublicKey_ = input.readBytes();
              break;
            }
            case 58: {
              com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = blockHead_.toBuilder();
              }
              blockHead_ = input.readMessage(com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(blockHead_);
                blockHead_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                blockTransactions_ = new java.util.ArrayList<com.photon.photonchain.network.proto.TransactionMessage.Transaction>();
                mutable_bitField0_ |= 0x00000080;
              }
              blockTransactions_.add(
                  input.readMessage(com.photon.photonchain.network.proto.TransactionMessage.Transaction.PARSER, extensionRegistry));
              break;
            }
            case 74: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              blockHash_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          blockTransactions_ = java.util.Collections.unmodifiableList(blockTransactions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.photon.photonchain.network.proto.BlockMessage.internal_static_Block_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.photon.photonchain.network.proto.BlockMessage.internal_static_Block_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.photon.photonchain.network.proto.BlockMessage.Block.class, com.photon.photonchain.network.proto.BlockMessage.Block.Builder.class);
    }

    private int bitField0_;
    public static final int BLOCKHEIGHT_FIELD_NUMBER = 1;
    private long blockHeight_;
    /**
     * <code>required int64 blockHeight = 1;</code>
     */
    public boolean hasBlockHeight() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 blockHeight = 1;</code>
     */
    public long getBlockHeight() {
      return blockHeight_;
    }

    public static final int BLOCKSIZE_FIELD_NUMBER = 2;
    private long blockSize_;
    /**
     * <code>required int64 blockSize = 2;</code>
     */
    public boolean hasBlockSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 blockSize = 2;</code>
     */
    public long getBlockSize() {
      return blockSize_;
    }

    public static final int TOTALAMOUNT_FIELD_NUMBER = 3;
    private long totalAmount_;
    /**
     * <code>required int64 totalAmount = 3;</code>
     */
    public boolean hasTotalAmount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 totalAmount = 3;</code>
     */
    public long getTotalAmount() {
      return totalAmount_;
    }

    public static final int TOTALFEE_FIELD_NUMBER = 4;
    private long totalFee_;
    /**
     * <code>required int64 totalFee = 4;</code>
     */
    public boolean hasTotalFee() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int64 totalFee = 4;</code>
     */
    public long getTotalFee() {
      return totalFee_;
    }

    public static final int BLOCKSIGNATURE_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString blockSignature_;
    /**
     * <code>required bytes blockSignature = 5;</code>
     */
    public boolean hasBlockSignature() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required bytes blockSignature = 5;</code>
     */
    public com.google.protobuf.ByteString getBlockSignature() {
      return blockSignature_;
    }

    public static final int FOUNDRYPUBLICKEY_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString foundryPublicKey_;
    /**
     * <code>required bytes foundryPublicKey = 6;</code>
     */
    public boolean hasFoundryPublicKey() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required bytes foundryPublicKey = 6;</code>
     */
    public com.google.protobuf.ByteString getFoundryPublicKey() {
      return foundryPublicKey_;
    }

    public static final int BLOCKHEAD_FIELD_NUMBER = 7;
    private com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead blockHead_;
    /**
     * <code>required .BlockHead blockHead = 7;</code>
     */
    public boolean hasBlockHead() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required .BlockHead blockHead = 7;</code>
     */
    public com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead getBlockHead() {
      return blockHead_ == null ? com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead.getDefaultInstance() : blockHead_;
    }
    /**
     * <code>required .BlockHead blockHead = 7;</code>
     */
    public com.photon.photonchain.network.proto.BlockHeadMessage.BlockHeadOrBuilder getBlockHeadOrBuilder() {
      return blockHead_ == null ? com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead.getDefaultInstance() : blockHead_;
    }

    public static final int BLOCKTRANSACTIONS_FIELD_NUMBER = 8;
    private java.util.List<com.photon.photonchain.network.proto.TransactionMessage.Transaction> blockTransactions_;
    /**
     * <code>repeated .Transaction blockTransactions = 8;</code>
     */
    public java.util.List<com.photon.photonchain.network.proto.TransactionMessage.Transaction> getBlockTransactionsList() {
      return blockTransactions_;
    }
    /**
     * <code>repeated .Transaction blockTransactions = 8;</code>
     */
    public java.util.List<? extends com.photon.photonchain.network.proto.TransactionMessage.TransactionOrBuilder> 
        getBlockTransactionsOrBuilderList() {
      return blockTransactions_;
    }
    /**
     * <code>repeated .Transaction blockTransactions = 8;</code>
     */
    public int getBlockTransactionsCount() {
      return blockTransactions_.size();
    }
    /**
     * <code>repeated .Transaction blockTransactions = 8;</code>
     */
    public com.photon.photonchain.network.proto.TransactionMessage.Transaction getBlockTransactions(int index) {
      return blockTransactions_.get(index);
    }
    /**
     * <code>repeated .Transaction blockTransactions = 8;</code>
     */
    public com.photon.photonchain.network.proto.TransactionMessage.TransactionOrBuilder getBlockTransactionsOrBuilder(
        int index) {
      return blockTransactions_.get(index);
    }

    public static final int BLOCKHASH_FIELD_NUMBER = 9;
    private volatile java.lang.Object blockHash_;
    /**
     * <code>required string blockHash = 9;</code>
     */
    public boolean hasBlockHash() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required string blockHash = 9;</code>
     */
    public java.lang.String getBlockHash() {
      java.lang.Object ref = blockHash_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          blockHash_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string blockHash = 9;</code>
     */
    public com.google.protobuf.ByteString
        getBlockHashBytes() {
      java.lang.Object ref = blockHash_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        blockHash_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasBlockHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBlockSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTotalAmount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTotalFee()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBlockSignature()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFoundryPublicKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBlockHead()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBlockHash()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getBlockHead().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getBlockTransactionsCount(); i++) {
        if (!getBlockTransactions(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, blockHeight_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, blockSize_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, totalAmount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, totalFee_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, blockSignature_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, foundryPublicKey_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, getBlockHead());
      }
      for (int i = 0; i < blockTransactions_.size(); i++) {
        output.writeMessage(8, blockTransactions_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, blockHash_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, blockHeight_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, blockSize_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, totalAmount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, totalFee_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, blockSignature_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, foundryPublicKey_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getBlockHead());
      }
      for (int i = 0; i < blockTransactions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, blockTransactions_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, blockHash_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.photon.photonchain.network.proto.BlockMessage.Block)) {
        return super.equals(obj);
      }
      com.photon.photonchain.network.proto.BlockMessage.Block other = (com.photon.photonchain.network.proto.BlockMessage.Block) obj;

      boolean result = true;
      result = result && (hasBlockHeight() == other.hasBlockHeight());
      if (hasBlockHeight()) {
        result = result && (getBlockHeight()
            == other.getBlockHeight());
      }
      result = result && (hasBlockSize() == other.hasBlockSize());
      if (hasBlockSize()) {
        result = result && (getBlockSize()
            == other.getBlockSize());
      }
      result = result && (hasTotalAmount() == other.hasTotalAmount());
      if (hasTotalAmount()) {
        result = result && (getTotalAmount()
            == other.getTotalAmount());
      }
      result = result && (hasTotalFee() == other.hasTotalFee());
      if (hasTotalFee()) {
        result = result && (getTotalFee()
            == other.getTotalFee());
      }
      result = result && (hasBlockSignature() == other.hasBlockSignature());
      if (hasBlockSignature()) {
        result = result && getBlockSignature()
            .equals(other.getBlockSignature());
      }
      result = result && (hasFoundryPublicKey() == other.hasFoundryPublicKey());
      if (hasFoundryPublicKey()) {
        result = result && getFoundryPublicKey()
            .equals(other.getFoundryPublicKey());
      }
      result = result && (hasBlockHead() == other.hasBlockHead());
      if (hasBlockHead()) {
        result = result && getBlockHead()
            .equals(other.getBlockHead());
      }
      result = result && getBlockTransactionsList()
          .equals(other.getBlockTransactionsList());
      result = result && (hasBlockHash() == other.hasBlockHash());
      if (hasBlockHash()) {
        result = result && getBlockHash()
            .equals(other.getBlockHash());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBlockHeight()) {
        hash = (37 * hash) + BLOCKHEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getBlockHeight());
      }
      if (hasBlockSize()) {
        hash = (37 * hash) + BLOCKSIZE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getBlockSize());
      }
      if (hasTotalAmount()) {
        hash = (37 * hash) + TOTALAMOUNT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTotalAmount());
      }
      if (hasTotalFee()) {
        hash = (37 * hash) + TOTALFEE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTotalFee());
      }
      if (hasBlockSignature()) {
        hash = (37 * hash) + BLOCKSIGNATURE_FIELD_NUMBER;
        hash = (53 * hash) + getBlockSignature().hashCode();
      }
      if (hasFoundryPublicKey()) {
        hash = (37 * hash) + FOUNDRYPUBLICKEY_FIELD_NUMBER;
        hash = (53 * hash) + getFoundryPublicKey().hashCode();
      }
      if (hasBlockHead()) {
        hash = (37 * hash) + BLOCKHEAD_FIELD_NUMBER;
        hash = (53 * hash) + getBlockHead().hashCode();
      }
      if (getBlockTransactionsCount() > 0) {
        hash = (37 * hash) + BLOCKTRANSACTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getBlockTransactionsList().hashCode();
      }
      if (hasBlockHash()) {
        hash = (37 * hash) + BLOCKHASH_FIELD_NUMBER;
        hash = (53 * hash) + getBlockHash().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.photon.photonchain.network.proto.BlockMessage.Block parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.photon.photonchain.network.proto.BlockMessage.Block parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.photon.photonchain.network.proto.BlockMessage.Block parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.photon.photonchain.network.proto.BlockMessage.Block parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.photon.photonchain.network.proto.BlockMessage.Block parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.photon.photonchain.network.proto.BlockMessage.Block parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.photon.photonchain.network.proto.BlockMessage.Block parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.photon.photonchain.network.proto.BlockMessage.Block parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.photon.photonchain.network.proto.BlockMessage.Block parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.photon.photonchain.network.proto.BlockMessage.Block parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.photon.photonchain.network.proto.BlockMessage.Block parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.photon.photonchain.network.proto.BlockMessage.Block parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.photon.photonchain.network.proto.BlockMessage.Block prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Block}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Block)
        com.photon.photonchain.network.proto.BlockMessage.BlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.photon.photonchain.network.proto.BlockMessage.internal_static_Block_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.photon.photonchain.network.proto.BlockMessage.internal_static_Block_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.photon.photonchain.network.proto.BlockMessage.Block.class, com.photon.photonchain.network.proto.BlockMessage.Block.Builder.class);
      }

      // Construct using com.photon.photonchain.network.proto.BlockMessage.Block.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBlockHeadFieldBuilder();
          getBlockTransactionsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        blockHeight_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        blockSize_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        totalAmount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        totalFee_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        blockSignature_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        foundryPublicKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (blockHeadBuilder_ == null) {
          blockHead_ = null;
        } else {
          blockHeadBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (blockTransactionsBuilder_ == null) {
          blockTransactions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          blockTransactionsBuilder_.clear();
        }
        blockHash_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.photon.photonchain.network.proto.BlockMessage.internal_static_Block_descriptor;
      }

      public com.photon.photonchain.network.proto.BlockMessage.Block getDefaultInstanceForType() {
        return com.photon.photonchain.network.proto.BlockMessage.Block.getDefaultInstance();
      }

      public com.photon.photonchain.network.proto.BlockMessage.Block build() {
        com.photon.photonchain.network.proto.BlockMessage.Block result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.photon.photonchain.network.proto.BlockMessage.Block buildPartial() {
        com.photon.photonchain.network.proto.BlockMessage.Block result = new com.photon.photonchain.network.proto.BlockMessage.Block(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.blockHeight_ = blockHeight_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.blockSize_ = blockSize_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.totalAmount_ = totalAmount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.totalFee_ = totalFee_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.blockSignature_ = blockSignature_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.foundryPublicKey_ = foundryPublicKey_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (blockHeadBuilder_ == null) {
          result.blockHead_ = blockHead_;
        } else {
          result.blockHead_ = blockHeadBuilder_.build();
        }
        if (blockTransactionsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            blockTransactions_ = java.util.Collections.unmodifiableList(blockTransactions_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.blockTransactions_ = blockTransactions_;
        } else {
          result.blockTransactions_ = blockTransactionsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.blockHash_ = blockHash_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.photon.photonchain.network.proto.BlockMessage.Block) {
          return mergeFrom((com.photon.photonchain.network.proto.BlockMessage.Block)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.photon.photonchain.network.proto.BlockMessage.Block other) {
        if (other == com.photon.photonchain.network.proto.BlockMessage.Block.getDefaultInstance()) return this;
        if (other.hasBlockHeight()) {
          setBlockHeight(other.getBlockHeight());
        }
        if (other.hasBlockSize()) {
          setBlockSize(other.getBlockSize());
        }
        if (other.hasTotalAmount()) {
          setTotalAmount(other.getTotalAmount());
        }
        if (other.hasTotalFee()) {
          setTotalFee(other.getTotalFee());
        }
        if (other.hasBlockSignature()) {
          setBlockSignature(other.getBlockSignature());
        }
        if (other.hasFoundryPublicKey()) {
          setFoundryPublicKey(other.getFoundryPublicKey());
        }
        if (other.hasBlockHead()) {
          mergeBlockHead(other.getBlockHead());
        }
        if (blockTransactionsBuilder_ == null) {
          if (!other.blockTransactions_.isEmpty()) {
            if (blockTransactions_.isEmpty()) {
              blockTransactions_ = other.blockTransactions_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureBlockTransactionsIsMutable();
              blockTransactions_.addAll(other.blockTransactions_);
            }
            onChanged();
          }
        } else {
          if (!other.blockTransactions_.isEmpty()) {
            if (blockTransactionsBuilder_.isEmpty()) {
              blockTransactionsBuilder_.dispose();
              blockTransactionsBuilder_ = null;
              blockTransactions_ = other.blockTransactions_;
              bitField0_ = (bitField0_ & ~0x00000080);
              blockTransactionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBlockTransactionsFieldBuilder() : null;
            } else {
              blockTransactionsBuilder_.addAllMessages(other.blockTransactions_);
            }
          }
        }
        if (other.hasBlockHash()) {
          bitField0_ |= 0x00000100;
          blockHash_ = other.blockHash_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasBlockHeight()) {
          return false;
        }
        if (!hasBlockSize()) {
          return false;
        }
        if (!hasTotalAmount()) {
          return false;
        }
        if (!hasTotalFee()) {
          return false;
        }
        if (!hasBlockSignature()) {
          return false;
        }
        if (!hasFoundryPublicKey()) {
          return false;
        }
        if (!hasBlockHead()) {
          return false;
        }
        if (!hasBlockHash()) {
          return false;
        }
        if (!getBlockHead().isInitialized()) {
          return false;
        }
        for (int i = 0; i < getBlockTransactionsCount(); i++) {
          if (!getBlockTransactions(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.photon.photonchain.network.proto.BlockMessage.Block parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.photon.photonchain.network.proto.BlockMessage.Block) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long blockHeight_ ;
      /**
       * <code>required int64 blockHeight = 1;</code>
       */
      public boolean hasBlockHeight() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 blockHeight = 1;</code>
       */
      public long getBlockHeight() {
        return blockHeight_;
      }
      /**
       * <code>required int64 blockHeight = 1;</code>
       */
      public Builder setBlockHeight(long value) {
        bitField0_ |= 0x00000001;
        blockHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 blockHeight = 1;</code>
       */
      public Builder clearBlockHeight() {
        bitField0_ = (bitField0_ & ~0x00000001);
        blockHeight_ = 0L;
        onChanged();
        return this;
      }

      private long blockSize_ ;
      /**
       * <code>required int64 blockSize = 2;</code>
       */
      public boolean hasBlockSize() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 blockSize = 2;</code>
       */
      public long getBlockSize() {
        return blockSize_;
      }
      /**
       * <code>required int64 blockSize = 2;</code>
       */
      public Builder setBlockSize(long value) {
        bitField0_ |= 0x00000002;
        blockSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 blockSize = 2;</code>
       */
      public Builder clearBlockSize() {
        bitField0_ = (bitField0_ & ~0x00000002);
        blockSize_ = 0L;
        onChanged();
        return this;
      }

      private long totalAmount_ ;
      /**
       * <code>required int64 totalAmount = 3;</code>
       */
      public boolean hasTotalAmount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 totalAmount = 3;</code>
       */
      public long getTotalAmount() {
        return totalAmount_;
      }
      /**
       * <code>required int64 totalAmount = 3;</code>
       */
      public Builder setTotalAmount(long value) {
        bitField0_ |= 0x00000004;
        totalAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 totalAmount = 3;</code>
       */
      public Builder clearTotalAmount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        totalAmount_ = 0L;
        onChanged();
        return this;
      }

      private long totalFee_ ;
      /**
       * <code>required int64 totalFee = 4;</code>
       */
      public boolean hasTotalFee() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int64 totalFee = 4;</code>
       */
      public long getTotalFee() {
        return totalFee_;
      }
      /**
       * <code>required int64 totalFee = 4;</code>
       */
      public Builder setTotalFee(long value) {
        bitField0_ |= 0x00000008;
        totalFee_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 totalFee = 4;</code>
       */
      public Builder clearTotalFee() {
        bitField0_ = (bitField0_ & ~0x00000008);
        totalFee_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString blockSignature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes blockSignature = 5;</code>
       */
      public boolean hasBlockSignature() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required bytes blockSignature = 5;</code>
       */
      public com.google.protobuf.ByteString getBlockSignature() {
        return blockSignature_;
      }
      /**
       * <code>required bytes blockSignature = 5;</code>
       */
      public Builder setBlockSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        blockSignature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes blockSignature = 5;</code>
       */
      public Builder clearBlockSignature() {
        bitField0_ = (bitField0_ & ~0x00000010);
        blockSignature_ = getDefaultInstance().getBlockSignature();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString foundryPublicKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes foundryPublicKey = 6;</code>
       */
      public boolean hasFoundryPublicKey() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required bytes foundryPublicKey = 6;</code>
       */
      public com.google.protobuf.ByteString getFoundryPublicKey() {
        return foundryPublicKey_;
      }
      /**
       * <code>required bytes foundryPublicKey = 6;</code>
       */
      public Builder setFoundryPublicKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        foundryPublicKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes foundryPublicKey = 6;</code>
       */
      public Builder clearFoundryPublicKey() {
        bitField0_ = (bitField0_ & ~0x00000020);
        foundryPublicKey_ = getDefaultInstance().getFoundryPublicKey();
        onChanged();
        return this;
      }

      private com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead blockHead_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead, com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead.Builder, com.photon.photonchain.network.proto.BlockHeadMessage.BlockHeadOrBuilder> blockHeadBuilder_;
      /**
       * <code>required .BlockHead blockHead = 7;</code>
       */
      public boolean hasBlockHead() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required .BlockHead blockHead = 7;</code>
       */
      public com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead getBlockHead() {
        if (blockHeadBuilder_ == null) {
          return blockHead_ == null ? com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead.getDefaultInstance() : blockHead_;
        } else {
          return blockHeadBuilder_.getMessage();
        }
      }
      /**
       * <code>required .BlockHead blockHead = 7;</code>
       */
      public Builder setBlockHead(com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead value) {
        if (blockHeadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          blockHead_ = value;
          onChanged();
        } else {
          blockHeadBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>required .BlockHead blockHead = 7;</code>
       */
      public Builder setBlockHead(
          com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead.Builder builderForValue) {
        if (blockHeadBuilder_ == null) {
          blockHead_ = builderForValue.build();
          onChanged();
        } else {
          blockHeadBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>required .BlockHead blockHead = 7;</code>
       */
      public Builder mergeBlockHead(com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead value) {
        if (blockHeadBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              blockHead_ != null &&
              blockHead_ != com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead.getDefaultInstance()) {
            blockHead_ =
              com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead.newBuilder(blockHead_).mergeFrom(value).buildPartial();
          } else {
            blockHead_ = value;
          }
          onChanged();
        } else {
          blockHeadBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>required .BlockHead blockHead = 7;</code>
       */
      public Builder clearBlockHead() {
        if (blockHeadBuilder_ == null) {
          blockHead_ = null;
          onChanged();
        } else {
          blockHeadBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>required .BlockHead blockHead = 7;</code>
       */
      public com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead.Builder getBlockHeadBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getBlockHeadFieldBuilder().getBuilder();
      }
      /**
       * <code>required .BlockHead blockHead = 7;</code>
       */
      public com.photon.photonchain.network.proto.BlockHeadMessage.BlockHeadOrBuilder getBlockHeadOrBuilder() {
        if (blockHeadBuilder_ != null) {
          return blockHeadBuilder_.getMessageOrBuilder();
        } else {
          return blockHead_ == null ?
              com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead.getDefaultInstance() : blockHead_;
        }
      }
      /**
       * <code>required .BlockHead blockHead = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead, com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead.Builder, com.photon.photonchain.network.proto.BlockHeadMessage.BlockHeadOrBuilder> 
          getBlockHeadFieldBuilder() {
        if (blockHeadBuilder_ == null) {
          blockHeadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead, com.photon.photonchain.network.proto.BlockHeadMessage.BlockHead.Builder, com.photon.photonchain.network.proto.BlockHeadMessage.BlockHeadOrBuilder>(
                  getBlockHead(),
                  getParentForChildren(),
                  isClean());
          blockHead_ = null;
        }
        return blockHeadBuilder_;
      }

      private java.util.List<com.photon.photonchain.network.proto.TransactionMessage.Transaction> blockTransactions_ =
        java.util.Collections.emptyList();
      private void ensureBlockTransactionsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          blockTransactions_ = new java.util.ArrayList<com.photon.photonchain.network.proto.TransactionMessage.Transaction>(blockTransactions_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.photon.photonchain.network.proto.TransactionMessage.Transaction, com.photon.photonchain.network.proto.TransactionMessage.Transaction.Builder, com.photon.photonchain.network.proto.TransactionMessage.TransactionOrBuilder> blockTransactionsBuilder_;

      /**
       * <code>repeated .Transaction blockTransactions = 8;</code>
       */
      public java.util.List<com.photon.photonchain.network.proto.TransactionMessage.Transaction> getBlockTransactionsList() {
        if (blockTransactionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(blockTransactions_);
        } else {
          return blockTransactionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Transaction blockTransactions = 8;</code>
       */
      public int getBlockTransactionsCount() {
        if (blockTransactionsBuilder_ == null) {
          return blockTransactions_.size();
        } else {
          return blockTransactionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Transaction blockTransactions = 8;</code>
       */
      public com.photon.photonchain.network.proto.TransactionMessage.Transaction getBlockTransactions(int index) {
        if (blockTransactionsBuilder_ == null) {
          return blockTransactions_.get(index);
        } else {
          return blockTransactionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Transaction blockTransactions = 8;</code>
       */
      public Builder setBlockTransactions(
          int index, com.photon.photonchain.network.proto.TransactionMessage.Transaction value) {
        if (blockTransactionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBlockTransactionsIsMutable();
          blockTransactions_.set(index, value);
          onChanged();
        } else {
          blockTransactionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Transaction blockTransactions = 8;</code>
       */
      public Builder setBlockTransactions(
          int index, com.photon.photonchain.network.proto.TransactionMessage.Transaction.Builder builderForValue) {
        if (blockTransactionsBuilder_ == null) {
          ensureBlockTransactionsIsMutable();
          blockTransactions_.set(index, builderForValue.build());
          onChanged();
        } else {
          blockTransactionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Transaction blockTransactions = 8;</code>
       */
      public Builder addBlockTransactions(com.photon.photonchain.network.proto.TransactionMessage.Transaction value) {
        if (blockTransactionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBlockTransactionsIsMutable();
          blockTransactions_.add(value);
          onChanged();
        } else {
          blockTransactionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Transaction blockTransactions = 8;</code>
       */
      public Builder addBlockTransactions(
          int index, com.photon.photonchain.network.proto.TransactionMessage.Transaction value) {
        if (blockTransactionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBlockTransactionsIsMutable();
          blockTransactions_.add(index, value);
          onChanged();
        } else {
          blockTransactionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Transaction blockTransactions = 8;</code>
       */
      public Builder addBlockTransactions(
          com.photon.photonchain.network.proto.TransactionMessage.Transaction.Builder builderForValue) {
        if (blockTransactionsBuilder_ == null) {
          ensureBlockTransactionsIsMutable();
          blockTransactions_.add(builderForValue.build());
          onChanged();
        } else {
          blockTransactionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Transaction blockTransactions = 8;</code>
       */
      public Builder addBlockTransactions(
          int index, com.photon.photonchain.network.proto.TransactionMessage.Transaction.Builder builderForValue) {
        if (blockTransactionsBuilder_ == null) {
          ensureBlockTransactionsIsMutable();
          blockTransactions_.add(index, builderForValue.build());
          onChanged();
        } else {
          blockTransactionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Transaction blockTransactions = 8;</code>
       */
      public Builder addAllBlockTransactions(
          java.lang.Iterable<? extends com.photon.photonchain.network.proto.TransactionMessage.Transaction> values) {
        if (blockTransactionsBuilder_ == null) {
          ensureBlockTransactionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, blockTransactions_);
          onChanged();
        } else {
          blockTransactionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Transaction blockTransactions = 8;</code>
       */
      public Builder clearBlockTransactions() {
        if (blockTransactionsBuilder_ == null) {
          blockTransactions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          blockTransactionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Transaction blockTransactions = 8;</code>
       */
      public Builder removeBlockTransactions(int index) {
        if (blockTransactionsBuilder_ == null) {
          ensureBlockTransactionsIsMutable();
          blockTransactions_.remove(index);
          onChanged();
        } else {
          blockTransactionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Transaction blockTransactions = 8;</code>
       */
      public com.photon.photonchain.network.proto.TransactionMessage.Transaction.Builder getBlockTransactionsBuilder(
          int index) {
        return getBlockTransactionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Transaction blockTransactions = 8;</code>
       */
      public com.photon.photonchain.network.proto.TransactionMessage.TransactionOrBuilder getBlockTransactionsOrBuilder(
          int index) {
        if (blockTransactionsBuilder_ == null) {
          return blockTransactions_.get(index);  } else {
          return blockTransactionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Transaction blockTransactions = 8;</code>
       */
      public java.util.List<? extends com.photon.photonchain.network.proto.TransactionMessage.TransactionOrBuilder> 
           getBlockTransactionsOrBuilderList() {
        if (blockTransactionsBuilder_ != null) {
          return blockTransactionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(blockTransactions_);
        }
      }
      /**
       * <code>repeated .Transaction blockTransactions = 8;</code>
       */
      public com.photon.photonchain.network.proto.TransactionMessage.Transaction.Builder addBlockTransactionsBuilder() {
        return getBlockTransactionsFieldBuilder().addBuilder(
            com.photon.photonchain.network.proto.TransactionMessage.Transaction.getDefaultInstance());
      }
      /**
       * <code>repeated .Transaction blockTransactions = 8;</code>
       */
      public com.photon.photonchain.network.proto.TransactionMessage.Transaction.Builder addBlockTransactionsBuilder(
          int index) {
        return getBlockTransactionsFieldBuilder().addBuilder(
            index, com.photon.photonchain.network.proto.TransactionMessage.Transaction.getDefaultInstance());
      }
      /**
       * <code>repeated .Transaction blockTransactions = 8;</code>
       */
      public java.util.List<com.photon.photonchain.network.proto.TransactionMessage.Transaction.Builder> 
           getBlockTransactionsBuilderList() {
        return getBlockTransactionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.photon.photonchain.network.proto.TransactionMessage.Transaction, com.photon.photonchain.network.proto.TransactionMessage.Transaction.Builder, com.photon.photonchain.network.proto.TransactionMessage.TransactionOrBuilder> 
          getBlockTransactionsFieldBuilder() {
        if (blockTransactionsBuilder_ == null) {
          blockTransactionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.photon.photonchain.network.proto.TransactionMessage.Transaction, com.photon.photonchain.network.proto.TransactionMessage.Transaction.Builder, com.photon.photonchain.network.proto.TransactionMessage.TransactionOrBuilder>(
                  blockTransactions_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          blockTransactions_ = null;
        }
        return blockTransactionsBuilder_;
      }

      private java.lang.Object blockHash_ = "";
      /**
       * <code>required string blockHash = 9;</code>
       */
      public boolean hasBlockHash() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required string blockHash = 9;</code>
       */
      public java.lang.String getBlockHash() {
        java.lang.Object ref = blockHash_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            blockHash_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string blockHash = 9;</code>
       */
      public com.google.protobuf.ByteString
          getBlockHashBytes() {
        java.lang.Object ref = blockHash_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          blockHash_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string blockHash = 9;</code>
       */
      public Builder setBlockHash(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        blockHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string blockHash = 9;</code>
       */
      public Builder clearBlockHash() {
        bitField0_ = (bitField0_ & ~0x00000100);
        blockHash_ = getDefaultInstance().getBlockHash();
        onChanged();
        return this;
      }
      /**
       * <code>required string blockHash = 9;</code>
       */
      public Builder setBlockHashBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        blockHash_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Block)
    }

    // @@protoc_insertion_point(class_scope:Block)
    private static final com.photon.photonchain.network.proto.BlockMessage.Block DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.photon.photonchain.network.proto.BlockMessage.Block();
    }

    public static com.photon.photonchain.network.proto.BlockMessage.Block getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Block>
        PARSER = new com.google.protobuf.AbstractParser<Block>() {
      public Block parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Block(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Block> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Block> getParserForType() {
      return PARSER;
    }

    public com.photon.photonchain.network.proto.BlockMessage.Block getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Block_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Block_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022BlockMessage.proto\032\030TransactionMessage" +
      ".proto\032\026BlockHeadMessage.proto\"\343\001\n\005Block" +
      "\022\023\n\013blockHeight\030\001 \002(\003\022\021\n\tblockSize\030\002 \002(\003" +
      "\022\023\n\013totalAmount\030\003 \002(\003\022\020\n\010totalFee\030\004 \002(\003\022" +
      "\026\n\016blockSignature\030\005 \002(\014\022\030\n\020foundryPublic" +
      "Key\030\006 \002(\014\022\035\n\tblockHead\030\007 \002(\0132\n.BlockHead" +
      "\022\'\n\021blockTransactions\030\010 \003(\0132\014.Transactio" +
      "n\022\021\n\tblockHash\030\t \002(\tB4\n$com.photon.photo" +
      "nchain.network.protoB\014BlockMessage"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.photon.photonchain.network.proto.TransactionMessage.getDescriptor(),
          com.photon.photonchain.network.proto.BlockHeadMessage.getDescriptor(),
        }, assigner);
    internal_static_Block_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Block_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Block_descriptor,
        new java.lang.String[] { "BlockHeight", "BlockSize", "TotalAmount", "TotalFee", "BlockSignature", "FoundryPublicKey", "BlockHead", "BlockTransactions", "BlockHash", });
    com.photon.photonchain.network.proto.TransactionMessage.getDescriptor();
    com.photon.photonchain.network.proto.BlockHeadMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
